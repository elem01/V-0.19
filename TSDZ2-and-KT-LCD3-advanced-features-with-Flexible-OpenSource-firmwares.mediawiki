NOTE: Before start using the firmware, you must configure correctly the options on LCD3. For instance, you should configure your battery low voltage cut off (battery voltage when it is discharged) and all the other parameters -- follow the next section.

KT-LCD3 shows and/or configure the following from TSDZ2 motor:

* '''<u>Main screen</u>''': this is the default screen after turn on the LCD.
** <u>assist level</u>: Assist level scales/amplify the torque sensor signal, if you want a higher assist level from the motor, choose the max assist level value. Assist level has 5 levels in total and user can define (on firmware configuration) a custom scale value for each level. Level 0 keep always the motor disabled.
** <u>ebike wheel speed</u>: the value can be shown in kms or mph.
** <u>battery power</u>: real time value in watts of the power being draw from the battery.
** <u>battery state of charge</u>: 6 different levels. When battery is empty, the empty symbol on LCD will also blink (state of charge is based on battery voltage and can be setup on the motor controller firmware configuration)
** <u>lights</u>: enabled with a button up long press, the motor controller will enable the ebike lights. LCD backlight will also be enabled. (backlight intensity can be setup on the motor controller firmware configuration).
** <u>brake</u>: LCD symbol is enabled when user press the ebike brakes, good to check that sensor brakes are working.
** <u>walk assist</u>: although it is implemented on LCD, it is not yet implemented on the motor controller. Enabled with a button down long press.
** <u>odometer field</u>: the following information will cycle with on/off button click
*** <u>battery voltage</u>: see your battery pack voltage.
*** <u>battery current</u>: see the current being draw from your battery pack.
*** <u>battery power</u>: see the accumulated battery power (in watts/hour) draw from your battery pack, since last battery full charge. This value is automatically reset when LCD turns on and battery voltage equals to charged battery voltage - this value can also be reset or set to a custom value on the configurations.
*** <u>pedal cadence</u>: see the pedals cadence in rotations per minute.
** <u>battery state of charge in percentage</u>: this value can be shown as an option on the temperature field. The percentage is based on the accumulated battery power draw from your battery pack and user can define on LCD configurations menu, the battery pack total watts/hour.

* '''<u>Max battery power screen</u>''': Motor controller will automatically choose a battery current in a way to limit the max battery power usage. The battery current value will never be higher than the max battery current setup on the configurations screen. Long click on on/off and up buttons to enter on this screen. Up and down buttons to increase/decrease the value. Long click of on/off button lo leave.

* '''<u>Configurations screen</u>''': long click on up and down buttons to enter on this screen. On/off button click to enter on subscreens and on/off button click to cycle on subscreens
** <u>0: wheel speed</u>
*** <u>0: max ebike wheel speed</u>: max speed up to you will get assistance from the motor. In km/h (not yet implemented on the motor controller).
*** <u>1: ebike wheel perimeter</u>: in millimeters and this value is used, for instance, to calculate the ebike wheel speed.
*** <u>2: wheel speed units</u>: 0 for show ebike wheel speed kmh and 1 for mph.
** <u>1: battery</u>
*** <u>0: battery cells number</u>: this value is used only to calculate battery state of charge to indicate on LCD battery bars symbols. For 48V battery, use value of 13.
*** <u>1: battery max current</u>: in amps. Motor controller will use no more than this value. Motor controller firmware limits this value to a safe one, like 18 amps (but this can be configured on motor controller firmware, like for use 24 amps).
*** <u>2: battery low cut-off voltage</u>: in volts. The motor controller firmware will limit battery discharge when the battery discharge down to this value. For a 48V battery, if each cells low cut-off voltage is 3.0V, you can use the value of 39.0 (3.0 * 13 = 39.0).

** <u>2: battery state of charge in watts/hour</u>
*** <u>0: enable/disable show of battery state of charge in percentage</u>
*** <u>1: battery state of charge increment or decrement</u>
*** <u>2: battery pack total power in watts/hour</u>: this value is used to calculate battery state of charge based on discharged watts/hour.
*** <u>3: set current watts/hour</u>

** <u>3: assist level</u>
*** <u>0: number of assist levels</u>: default value: 5. This is the number of available assist levels, max number is 9.
*** <u>1: assist level factor</u>: this is the factor (for assist level 1) that is multiplied to the calculated human power that the rider does on the bicycle pedals and will scale the final motor assist level.
*** <u>x: assist level factor</u>: factor for assist level x -- same as the previous and repeats for the next assist level.

** <u>4: various</u>
*** <u>0: motor voltage type</u>: default value: 0. 0 for 48V brushless motor (TSDZ2 52V version has a 48V brushless motor); 1 for 36V brushless motor. This configuration is needed for FOC calculations.
*** <u>1: motor assistance startup without pedal rotation</u>: default value: 0 (disabled). 1 to enable this feature. Recommended to keep at 0 value if you don't have brake sensors installed. 
*** <u>2: PAS max cadence</u>: default value: 110. This value is used for calculation of human pedal power that will after be used for motor assist level.

** <u>5: advanced technical data</u> (the following values are read only, user can't change them)
*** <u>0: adc throttle</u>: see the current value.
*** <u>1: throttle</u>: see the current value.
*** <u>2: adc pedal torque sensor</u>: see the current value.
*** <u>3: pedal torque sensor</u>: see the current value.
*** <u>4: pedal cadence</u>: see the current value.
*** <u>5: pedal human power</u>: see the current value.
*** <u>6: PWM duty_cycle</u>: see the current value.
*** <u>7: motor speed in ERPs</u>: see the current value.
*** <u>8: FOC angle</u>: see the current value. This value must be multiplied by 1.4 to get and angle value in degrees.