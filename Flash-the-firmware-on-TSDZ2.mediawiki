__TOC__

= Wire the STLinkV2 to the TSDZ2 wheel speed sensor cable =

The microcontroller chip that need to be flashed with the firmware is the STM8S105. The needed wires connection for that are: GND, RST and SWIM. This wires are available on the wheel speed sensor cable (other than the wires needed for the sensor).

Some options you have:
# buy an extra speed sensor and cut the sensor from the cable and so you will have a cable with a connector that you can use only for programming
# cut the cable to wire the needed wires for flashing and keep the other wires intact - this will work perfectly and you can avoid to buy the extra wheel speed sensor

Here is the list of wires:
The connections to STLinkV2 clone:
* purple wire connect to STLinkV2 RST pin
* orange wire connect to STLinkV2 GND pin
* black wire connect to STLinkV2 SWIM pin
* brown wire connect to STLinkV2 VCC/5V pin (Optional - For those who want to flash without a battery attached)

NOTE: the wires should be short like 10 centimeters or you will probably get errors while trying to flash. If you need a long cable, try to use an USB extension instead.

Example of my wiring:

[[https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/raw/master/STLinkV2_to_TSDZ2_motor_controller-01.png]]

[[https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/raw/master/STLinkV2_to_TSDZ2_motor_controller-02.png]]

= Download and flash the firmware =

# [http://www.st.com/content/st_com/en/products/development-tools/software-development-tools/stm32-software-development-tools/stm32-programmers/stsw-link004.html Download STLink utility for Windows here]. This software is from the STM8S105 manufacture for flashing the firmware. NOTE: if you are on Linux or MAC, you can use other alternative tool. For instance, [https://opensourceebikefirmware.bitbucket.io/development_tsdz2/Various--2018.04.18_-_original_firmware_and_debug_session_using_OpenOCD.html on Linux you can use stm8flash].
# [https://github.com/OpenSource-EBike-firmware/TSDZ2-Smart-EBike/releases Download the firmware hex file from here]. Pick the file with name TSDZ2_xxxxxxx.hex.
# Flash the firmware with the motor controller powered on. Select the proper processor type, both the TSDZ2 controller and the LCD3 display use a stm8s105x6 processor.

== Flash firmware on Linux ==

Both the TSDZ2 and the LCD3 use a stm8s105x6 processor.<br>

NOTE: when running stm8flash and if you are using for instance Linux Ubuntu, you may need to run it using 'sudo stm8flash xxx' to get the stm8flash working.

First backup everything (just to be sure):<br>
<code>stm8flash -c stlinkv2 -p stm8s105?6 -s opt -r TSDZ_orig_opt.bin</code><br>
<code>stm8flash -c stlinkv2 -p stm8s105?6 -r TSDZ_orig.bin</code><br>
<code>stm8flash -c stlinkv2 -p stm8s105?6 -s eeprom -r TSDZ_orig_eeprom.bin</code><br>

Erase protection:<br>
<code>echo "00 00 ff 20 df 00 ff 00 ff 00 ff 00 ff 00 ff" | xxd -r -p > option_bytes_pwm_n_channels_enabled.bin</code><br>
<code>stm8flash -c stlinkv2 -p stm8s105?6 -s opt -w option_bytes_pwm_n_channels_enabled.bin</code><br>

Flash firmware:<br>
<code>stm8flash -c stlinkv2 -p stm8s105?6 -w TSDZ2-vxxx.hex</code><br>